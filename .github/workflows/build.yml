name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'src/**/*'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    paths:
      - '.github/workflows/build.yml'
      - 'src/**/*'
      - 'Cargo.toml'
      - 'Cargo.lock'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.config.platform }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - platform: ubuntu-20.04
            target: 'x86_64-unknown-linux-gnu'
          - platform: ubuntu-20.04
            target: 'aarch64-unknown-linux-gnu'
          - platform: ubuntu-20.04
            target: 'armv7-unknown-linux-gnueabihf'

          - platform: macos-latest
            target: 'x86_64-apple-darwin'
          - platform: macos-latest
            target: 'aarch64-apple-darwin'

          - platform: windows-latest
            target: 'x86_64-pc-windows-msvc'
          - platform: windows-latest
            target: 'aarch64-pc-windows-msvc'

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install target
        run: rustup target add ${{ matrix.config.target }}

      - name: Build
        run: cargo build --release --features binary --target ${{ matrix.config.target }}

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: rsrpc-${{ matrix.config.target }}
          # Find exec based on platform
          path: target/${{ matrix.config.target }}/release/rsrpc${{ matrix.config.platform == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Download all artifacts from the build job
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      # From https://github.com/SpikeHD/RogueTop/blob/main/.github/workflows/build.yml
      - name: Rename executables to their folder names
        run: |
          # get the folder name
          folder_name=artifacts

          # get the list of inner folders
          folders=$(ls $folder_name)

          # loop through the files in each folder
          for folder in $folders; do
            # Get the list of files in the folder
            files=$(ls "$folder_name/$folder")
          
            for file in $files; do
              # Get the filename without extension
              filename="${file%.*}"
          
              # Get the extension (everything after the last dot)
              extension="${file##*.}"
          
              # Build the new filename with parent folder name and extension
              new_filename="$folder_name/$folder/$folder.$extension"
          
              # Rename the file
              mv "$folder_name/$folder/$file" "$new_filename"
            done
          done

      - name: Create release using all artifacts
        uses: softprops/action-gh-release@v2
        if: github.event_name != 'schedule'
        with:
          files: artifacts/**
          token: ${{ secrets.GITHUB_TOKEN }}
          # Release name is the tag name
          name: ${{ github.ref_name }} - ${{ github.sha }}
          draft: false
          generate_release_notes: true
          prerelease: false